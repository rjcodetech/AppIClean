{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/screens/Home.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash.debounce';\nimport homeStyles from '../styles/home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [estados, setEstados] = useState([]);\n  const [estadoSelecionado, setEstadoSelecionado] = useState('');\n  const [cidadeDigitada, setCidadeDigitada] = useState('');\n  const [cidadeSelecionada, setCidadeSelecionada] = useState('');\n  const [distritosEncontrados, setDistritosEncontrados] = useState([]);\n  useEffect(() => {\n    // Carregar lista de estados ao montar o componente\n    const carregarEstados = async () => {\n      try {\n        const response = await axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados');\n        const estadosData = response.data.map(estado => estado.sigla);\n        setEstados(estadosData);\n      } catch (error) {\n        console.error('Erro ao carregar estados:', error);\n      }\n    };\n    carregarEstados();\n  }, []);\n  const buscarDistritos = async () => {\n    try {\n      if (estadoSelecionado.trim() !== '' && cidadeDigitada.trim() !== '') {\n        const response = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estadoSelecionado}/distritos`);\n        console.log(response);\n        const distritos = response.data.filter(distrito => distrito.nome.toLowerCase().includes(cidadeDigitada.toLowerCase())).map(distrito => distrito.nome);\n        setDistritosEncontrados(distritos);\n      } else {\n        // Limpar a lista quando a entrada está vazia\n        setDistritosEncontrados([]);\n      }\n    } catch (error) {\n      console.error('Erro ao buscar distritos:', error);\n    }\n  };\n  const buscarDistritosDebounced = debounce(buscarDistritos, 300);\n  useEffect(() => {\n    buscarDistritosDebounced();\n  }, [estadoSelecionado, cidadeDigitada]);\n  const selecionarCidade = cidade => {\n    setCidadeDigitada(cidade);\n    setCidadeSelecionada(cidade);\n  };\n  const handlePesquisar = () => {\n    // Lógica para ação de pesquisa, você pode implementar de acordo com a necessidade\n    console.log('Pesquisar:', estadoSelecionado, cidadeSelecionada);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: homeStyles.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.searchForm,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: homeStyles.select,\n        value: estadoSelecionado,\n        onChange: e => setEstadoSelecionado(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione o Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), estados.map((estado, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: estado,\n          children: estado\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: homeStyles.input,\n        placeholder: \"Nome da Cidade\",\n        value: cidadeDigitada,\n        onChange: e => setCidadeDigitada(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: distritosEncontrados.map((distrito, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selecionarCidade(distrito),\n          children: distrito\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), cidadeSelecionada && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: homeStyles.button,\n        onClick: handlePesquisar,\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"eOh4ry2NyZej3DD+rRsQhqFHROA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","debounce","homeStyles","jsxDEV","_jsxDEV","Home","_s","estados","setEstados","estadoSelecionado","setEstadoSelecionado","cidadeDigitada","setCidadeDigitada","cidadeSelecionada","setCidadeSelecionada","distritosEncontrados","setDistritosEncontrados","carregarEstados","response","get","estadosData","data","map","estado","sigla","error","console","buscarDistritos","trim","log","distritos","filter","distrito","nome","toLowerCase","includes","buscarDistritosDebounced","selecionarCidade","cidade","handlePesquisar","className","body","children","searchForm","select","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","type","input","placeholder","onClick","button","_c","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/Home.js"],"sourcesContent":["// src/screens/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport debounce from 'lodash.debounce';\r\nimport homeStyles from '../styles/home.css';\r\n\r\nconst Home = () => {\r\n  const [estados, setEstados] = useState([]);\r\n  const [estadoSelecionado, setEstadoSelecionado] = useState('');\r\n  const [cidadeDigitada, setCidadeDigitada] = useState('');\r\n  const [cidadeSelecionada, setCidadeSelecionada] = useState('');\r\n  const [distritosEncontrados, setDistritosEncontrados] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Carregar lista de estados ao montar o componente\r\n    const carregarEstados = async () => {\r\n      try {\r\n        const response = await axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados');\r\n        const estadosData = response.data.map((estado) => estado.sigla);\r\n        setEstados(estadosData);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar estados:', error);\r\n      }\r\n    };\r\n\r\n    carregarEstados();\r\n  }, []);\r\n\r\n  const buscarDistritos = async () => {\r\n    try {\r\n      if (estadoSelecionado.trim() !== '' && cidadeDigitada.trim() !== '') {\r\n        const response = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estadoSelecionado}/distritos`);\r\n\r\n        console.log(response);\r\n\r\n        const distritos = response.data\r\n          .filter((distrito) => distrito.nome.toLowerCase().includes(cidadeDigitada.toLowerCase()))\r\n          .map((distrito) => distrito.nome);\r\n\r\n        setDistritosEncontrados(distritos);\r\n      } else {\r\n        // Limpar a lista quando a entrada está vazia\r\n        setDistritosEncontrados([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao buscar distritos:', error);\r\n    }\r\n  };\r\n\r\n  const buscarDistritosDebounced = debounce(buscarDistritos, 300);\r\n\r\n  useEffect(() => {\r\n    buscarDistritosDebounced();\r\n  }, [estadoSelecionado, cidadeDigitada]);\r\n\r\n  const selecionarCidade = (cidade) => {\r\n    setCidadeDigitada(cidade);\r\n    setCidadeSelecionada(cidade);\r\n  };\r\n\r\n  const handlePesquisar = () => {\r\n    // Lógica para ação de pesquisa, você pode implementar de acordo com a necessidade\r\n    console.log('Pesquisar:', estadoSelecionado, cidadeSelecionada);\r\n  };\r\n\r\n  return (\r\n    <div className={homeStyles.body}>\r\n      {/* ... (restante do código) */}\r\n      <div className={homeStyles.searchForm}>\r\n        {/* Dropdown para selecionar o estado */}\r\n        <select\r\n          className={homeStyles.select}\r\n          value={estadoSelecionado}\r\n          onChange={(e) => setEstadoSelecionado(e.target.value)}\r\n        >\r\n          <option value=\"\">Selecione o Estado</option>\r\n          {estados.map((estado, index) => (\r\n            <option key={index} value={estado}>\r\n              {estado}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {/* Input para a cidade */}\r\n        <input\r\n          type=\"text\"\r\n          className={homeStyles.input}\r\n          placeholder=\"Nome da Cidade\"\r\n          value={cidadeDigitada}\r\n          onChange={(e) => setCidadeDigitada(e.target.value)}\r\n        />\r\n        {/* Lista de distritos */}\r\n        <ul>\r\n          {distritosEncontrados.map((distrito, index) => (\r\n            <li key={index} onClick={() => selecionarCidade(distrito)}>\r\n              {distrito}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {/* Botão de Pesquisar */}\r\n        {cidadeSelecionada && (\r\n          <button className={homeStyles.button} onClick={handlePesquisar}>\r\n            Pesquisar\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,UAAU,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACe,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACiB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,6DAA6D,CAAC;QAC/F,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACC,KAAK,CAAC;QAC/DhB,UAAU,CAACY,WAAW,CAAC;MACzB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDR,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,IAAIlB,iBAAiB,CAACmB,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIjB,cAAc,CAACiB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QACnE,MAAMV,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAE,+DAA8DV,iBAAkB,YAAW,CAAC;QAE9HiB,OAAO,CAACG,GAAG,CAACX,QAAQ,CAAC;QAErB,MAAMY,SAAS,GAAGZ,QAAQ,CAACG,IAAI,CAC5BU,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACxB,cAAc,CAACuB,WAAW,CAAC,CAAC,CAAC,CAAC,CACxFZ,GAAG,CAAEU,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;QAEnCjB,uBAAuB,CAACc,SAAS,CAAC;MACpC,CAAC,MAAM;QACL;QACAd,uBAAuB,CAAC,EAAE,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMW,wBAAwB,GAAGnC,QAAQ,CAAC0B,eAAe,EAAE,GAAG,CAAC;EAE/D5B,SAAS,CAAC,MAAM;IACdqC,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,CAAC3B,iBAAiB,EAAEE,cAAc,CAAC,CAAC;EAEvC,MAAM0B,gBAAgB,GAAIC,MAAM,IAAK;IACnC1B,iBAAiB,CAAC0B,MAAM,CAAC;IACzBxB,oBAAoB,CAACwB,MAAM,CAAC;EAC9B,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACAb,OAAO,CAACG,GAAG,CAAC,YAAY,EAAEpB,iBAAiB,EAAEI,iBAAiB,CAAC;EACjE,CAAC;EAED,oBACET,OAAA;IAAKoC,SAAS,EAAEtC,UAAU,CAACuC,IAAK;IAAAC,QAAA,eAE9BtC,OAAA;MAAKoC,SAAS,EAAEtC,UAAU,CAACyC,UAAW;MAAAD,QAAA,gBAEpCtC,OAAA;QACEoC,SAAS,EAAEtC,UAAU,CAAC0C,MAAO;QAC7BC,KAAK,EAAEpC,iBAAkB;QACzBqC,QAAQ,EAAGC,CAAC,IAAKrC,oBAAoB,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAH,QAAA,gBAEtDtC,OAAA;UAAQyC,KAAK,EAAC,EAAE;UAAAH,QAAA,EAAC;QAAkB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC3C7C,OAAO,CAACe,GAAG,CAAC,CAACC,MAAM,EAAE8B,KAAK,kBACzBjD,OAAA;UAAoByC,KAAK,EAAEtB,MAAO;UAAAmB,QAAA,EAC/BnB;QAAM,GADI8B,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAEThD,OAAA;QACEkD,IAAI,EAAC,MAAM;QACXd,SAAS,EAAEtC,UAAU,CAACqD,KAAM;QAC5BC,WAAW,EAAC,gBAAgB;QAC5BX,KAAK,EAAElC,cAAe;QACtBmC,QAAQ,EAAGC,CAAC,IAAKnC,iBAAiB,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC,eAEFhD,OAAA;QAAAsC,QAAA,EACG3B,oBAAoB,CAACO,GAAG,CAAC,CAACU,QAAQ,EAAEqB,KAAK,kBACxCjD,OAAA;UAAgBqD,OAAO,EAAEA,CAAA,KAAMpB,gBAAgB,CAACL,QAAQ,CAAE;UAAAU,QAAA,EACvDV;QAAQ,GADFqB,KAAK;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAEJvC,iBAAiB,iBAChBT,OAAA;QAAQoC,SAAS,EAAEtC,UAAU,CAACwD,MAAO;QAACD,OAAO,EAAElB,eAAgB;QAAAG,QAAA,EAAC;MAEhE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9C,EAAA,CArGID,IAAI;AAAAsD,EAAA,GAAJtD,IAAI;AAuGV,eAAeA,IAAI;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}