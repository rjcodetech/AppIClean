{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\Horarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HorariosPage = ({\n  cidadeSelecionada,\n  estadoSelecionado\n}) => {\n  _s();\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\n  useEffect(() => {\n    const carregarHorariosDisponiveis = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/horarios', {\n          params: {\n            estado: estadoSelecionado,\n            cidade: cidadeSelecionada\n          }\n        });\n        console.log('Horários disponíveis:', response.data);\n        setHorariosDisponiveis(response.data);\n      } catch (error) {\n        console.error('Erro ao carregar horários disponíveis:', error);\n      }\n    };\n    if (cidadeSelecionada && estadoSelecionado) {\n      carregarHorariosDisponiveis();\n    } else {\n      setHorariosDisponiveis([]);\n    }\n  }, [cidadeSelecionada, estadoSelecionado]);\n\n  // Função para formatar a data no formato dd/mm - hh:mm\n  const formatarDataHora = dataHora => {\n    const data = new Date(dataHora);\n    const dia = data.getDate().toString().padStart(2, '0');\n    const mes = (data.getMonth() + 1).toString().padStart(2, '0');\n    const hora = data.getHours().toString().padStart(2, '0');\n    const minutos = data.getMinutes().toString().padStart(2, '0');\n    return `${dia}/${mes} - ${hora}:${minutos}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hor\\xE1rios Dispon\\xEDveis para Agendamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hora\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: horariosDisponiveis.map((horario, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => console.log('Data selecionada:', horario.data),\n                children: formatarDataHora(horario.data)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => console.log('Horário selecionado:', horario.hora),\n                children: horario.hora\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(HorariosPage, \"3qUwd/CofBhDKhcjNFLCT45SEIs=\");\n_c = HorariosPage;\nexport default HorariosPage;\nvar _c;\n$RefreshReg$(_c, \"HorariosPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HorariosPage","cidadeSelecionada","estadoSelecionado","_s","horariosDisponiveis","setHorariosDisponiveis","carregarHorariosDisponiveis","response","get","params","estado","cidade","console","log","data","error","formatarDataHora","dataHora","Date","dia","getDate","toString","padStart","mes","getMonth","hora","getHours","minutos","getMinutes","children","fileName","_jsxFileName","lineNumber","columnNumber","map","horario","index","onClick","_c","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/Horarios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HorariosPage = ({ cidadeSelecionada, estadoSelecionado }) => {\r\n\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const carregarHorariosDisponiveis = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/horarios', {\r\n          params: {\r\n            estado: estadoSelecionado,\r\n            cidade: cidadeSelecionada,\r\n          },\r\n        });\r\n        console.log('Horários disponíveis:', response.data);\r\n        setHorariosDisponiveis(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar horários disponíveis:', error);\r\n      }\r\n    };\r\n\r\n    if (cidadeSelecionada && estadoSelecionado) {\r\n      carregarHorariosDisponiveis();\r\n    } else {\r\n      setHorariosDisponiveis([]);\r\n    }\r\n  }, [cidadeSelecionada, estadoSelecionado]);\r\n\r\n  // Função para formatar a data no formato dd/mm - hh:mm\r\n  const formatarDataHora = (dataHora) => {\r\n    const data = new Date(dataHora);\r\n    const dia = data.getDate().toString().padStart(2, '0');\r\n    const mes = (data.getMonth() + 1).toString().padStart(2, '0');\r\n    const hora = data.getHours().toString().padStart(2, '0');\r\n    const minutos = data.getMinutes().toString().padStart(2, '0');\r\n    return `${dia}/${mes} - ${hora}:${minutos}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Horários Disponíveis para Agendamento</h2>\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Data</th>\r\n              <th>Hora</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {horariosDisponiveis.map((horario, index) => (\r\n              <tr key={index}>\r\n                <td>\r\n                  <button onClick={() => console.log('Data selecionada:', horario.data)}>\r\n                    {formatarDataHora(horario.data)}\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button onClick={() => console.log('Horário selecionado:', horario.hora)}>\r\n                    {horario.hora}\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorariosPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}