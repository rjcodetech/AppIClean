{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\Horarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HorariosPage = ({\n  cidadeSelecionada,\n  estadoSelecionado\n}) => {\n  _s();\n  const [horariosPorDia, setHorariosPorDia] = useState({});\n  useEffect(() => {\n    const carregarHorariosDisponiveis = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/horarios', {\n          params: {\n            estado: estadoSelecionado,\n            cidade: cidadeSelecionada\n          }\n        });\n        console.log('Horários disponíveis:', response.data);\n        organizarHorariosPorDia(response.data);\n      } catch (error) {\n        console.error('Erro ao carregar horários disponíveis:', error);\n      }\n    };\n    if (cidadeSelecionada && estadoSelecionado) {\n      carregarHorariosDisponiveis();\n    } else {\n      setHorariosPorDia({});\n    }\n  }, [cidadeSelecionada, estadoSelecionado]);\n\n  // Função para organizar os horários por dia\n  const organizarHorariosPorDia = horarios => {\n    const horariosPorDiaTemp = {};\n    horarios.forEach(horario => {\n      const data = new Date(horario.data);\n      const dataKey = `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;\n      if (!horariosPorDiaTemp[dataKey]) {\n        horariosPorDiaTemp[dataKey] = [];\n      }\n      horariosPorDiaTemp[dataKey].push(horario);\n    });\n    setHorariosPorDia(horariosPorDiaTemp);\n  };\n\n  // Função para formatar a hora\n  const formatarHora = dataHora => {\n    const data = new Date(dataHora);\n    return `${data.getHours().toString().padStart(2, '0')}:${data.getMinutes().toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hor\\xE1rios Dispon\\xEDveis para Agendamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Object.keys(horariosPorDia).map(dataKey => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: dataKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Hora\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: horariosPorDia[dataKey].map((horario, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatarHora(horario.data)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, dataKey, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(HorariosPage, \"YfYgSxXJR4j0N+jeZ3KG92wPmOo=\");\n_c = HorariosPage;\nexport default HorariosPage;\nvar _c;\n$RefreshReg$(_c, \"HorariosPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HorariosPage","cidadeSelecionada","estadoSelecionado","_s","horariosPorDia","setHorariosPorDia","carregarHorariosDisponiveis","response","get","params","estado","cidade","console","log","data","organizarHorariosPorDia","error","horarios","horariosPorDiaTemp","forEach","horario","Date","dataKey","getDate","getMonth","getFullYear","push","formatarHora","dataHora","getHours","toString","padStart","getMinutes","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","_c","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/Horarios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HorariosPage = ({ cidadeSelecionada, estadoSelecionado }) => {\r\n  const [horariosPorDia, setHorariosPorDia] = useState({});\r\n\r\n  useEffect(() => {\r\n    const carregarHorariosDisponiveis = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/horarios', {\r\n          params: {\r\n            estado: estadoSelecionado,\r\n            cidade: cidadeSelecionada,\r\n          },\r\n        });\r\n        console.log('Horários disponíveis:', response.data);\r\n        organizarHorariosPorDia(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar horários disponíveis:', error);\r\n      }\r\n    };\r\n\r\n    if (cidadeSelecionada && estadoSelecionado) {\r\n      carregarHorariosDisponiveis();\r\n    } else {\r\n      setHorariosPorDia({});\r\n    }\r\n  }, [cidadeSelecionada, estadoSelecionado]);\r\n\r\n  // Função para organizar os horários por dia\r\n  const organizarHorariosPorDia = (horarios) => {\r\n    const horariosPorDiaTemp = {};\r\n    horarios.forEach((horario) => {\r\n      const data = new Date(horario.data);\r\n      const dataKey = `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`;\r\n      if (!horariosPorDiaTemp[dataKey]) {\r\n        horariosPorDiaTemp[dataKey] = [];\r\n      }\r\n      horariosPorDiaTemp[dataKey].push(horario);\r\n    });\r\n    setHorariosPorDia(horariosPorDiaTemp);\r\n  };\r\n\r\n  // Função para formatar a hora\r\n  const formatarHora = (dataHora) => {\r\n    const data = new Date(dataHora);\r\n    return `${data.getHours().toString().padStart(2, '0')}:${data.getMinutes().toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Horários Disponíveis para Agendamento</h2>\r\n      <div>\r\n        {Object.keys(horariosPorDia).map((dataKey) => (\r\n          <div key={dataKey}>\r\n            <h3>{dataKey}</h3>\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Hora</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {horariosPorDia[dataKey].map((horario, index) => (\r\n                  <tr key={index}>\r\n                    <td>{formatarHora(horario.data)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorariosPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}