{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/screens/Home.js\nimport React, { useEffect, useState } from 'react';\nimport homeStyles from '../styles/home.css'; // Importando os estilos\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [cidadeDigitada, setCidadeDigitada] = useState('');\n  const [cidadesEncontradas, setCidadesEncontradas] = useState([]);\n  useEffect(() => {\n    // Consultar a API ao digitar o nome da cidade\n    if (cidadeDigitada.trim() !== '') {\n      buscarCidades();\n    } else {\n      // Limpar a lista quando a entrada está vazia\n      setCidadesEncontradas([]);\n    }\n  }, [cidadeDigitada]);\n  const buscarCidades = async () => {\n    try {\n      const response = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/municipios?nome=${cidadeDigitada}&orderBy=nome`);\n      const cidades = response.data.map(cidade => cidade.nome);\n      setCidadesEncontradas(cidades);\n    } catch (error) {\n      console.error('Erro ao buscar cidades:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: homeStyles.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.searchForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: homeStyles.input,\n        placeholder: \"Nome do Servi\\xE7o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: homeStyles.input,\n        placeholder: \"Nome da Cidade\",\n        value: cidadeDigitada,\n        onChange: e => setCidadeDigitada(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: homeStyles.button,\n        onClick: () => handlePesquisar(),\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cidadesEncontradas.map((cidade, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: cidade\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"0gDG0zi8FKDfHYSGInIP8RVC9dc=\");\n_c = Home;\nconst handlePesquisar = () => {\n  // Lógica de pesquisa aqui\n  console.log('Pesquisar...');\n};\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","homeStyles","axios","jsxDEV","_jsxDEV","Home","_s","cidadeDigitada","setCidadeDigitada","cidadesEncontradas","setCidadesEncontradas","trim","buscarCidades","response","get","cidades","data","map","cidade","nome","error","console","className","body","children","searchForm","type","input","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","button","onClick","handlePesquisar","index","_c","log","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/Home.js"],"sourcesContent":["// src/screens/Home.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport homeStyles from '../styles/home.css';  // Importando os estilos\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n\r\n\r\n  const [cidadeDigitada, setCidadeDigitada] = useState('');\r\n  const [cidadesEncontradas, setCidadesEncontradas] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    // Consultar a API ao digitar o nome da cidade\r\n    if (cidadeDigitada.trim() !== '') {\r\n      buscarCidades();\r\n    } else {\r\n      // Limpar a lista quando a entrada está vazia\r\n      setCidadesEncontradas([]);\r\n    }\r\n  }, [cidadeDigitada]);\r\n\r\n  const buscarCidades = async () => {\r\n    try {\r\n      const response = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/municipios?nome=${cidadeDigitada}&orderBy=nome`);\r\n      const cidades = response.data.map((cidade) => cidade.nome);\r\n      setCidadesEncontradas(cidades);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar cidades:', error);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={homeStyles.body}>\r\n      {/* ... (restante do código) */}\r\n      <div className={homeStyles.searchForm}>\r\n        <input\r\n          type=\"text\"\r\n          className={homeStyles.input}\r\n          placeholder=\"Nome do Serviço\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className={homeStyles.input}\r\n          placeholder=\"Nome da Cidade\"\r\n          value={cidadeDigitada}\r\n          onChange={(e) => setCidadeDigitada(e.target.value)}\r\n        />\r\n        <button\r\n          className={homeStyles.button}\r\n          onClick={() => handlePesquisar()}\r\n        >\r\n          Pesquisar\r\n        </button>\r\n        {/* Exibir a lista de cidades encontradas */}\r\n        <ul>\r\n          {cidadesEncontradas.map((cidade, index) => (\r\n            <li key={index}>{cidade}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n      \r\n    }\r\n    const handlePesquisar = () => {\r\n      // Lógica de pesquisa aqui\r\n      console.log('Pesquisar...');\r\n    };\r\n    \r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}