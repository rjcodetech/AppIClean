{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\Horarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HorariosPage = ({\n  cidadeSelecionada,\n  estadoSelecionado\n}) => {\n  _s();\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\n  useEffect(() => {\n    const carregarHorariosDisponiveis = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/horarios', {\n          params: {\n            estado: estadoSelecionado,\n            cidade: cidadeSelecionada\n          }\n        });\n        console.log('Horários disponíveis:', response.data);\n        setHorariosDisponiveis(response.data);\n      } catch (error) {\n        console.error('Erro ao carregar horários disponíveis:', error);\n      }\n    };\n    if (cidadeSelecionada && estadoSelecionado) {\n      carregarHorariosDisponiveis();\n    } else {\n      setHorariosDisponiveis([]);\n    }\n  }, [cidadeSelecionada, estadoSelecionado]);\n\n  // Agrupa os horários disponíveis por dia\n  const horariosPorDia = {};\n  horariosDisponiveis.forEach(horario => {\n    const data = new Date(horario.data).toLocaleDateString('pt-BR');\n    if (!horariosPorDia[data]) {\n      horariosPorDia[data] = [];\n    }\n    horariosPorDia[data].push(horario);\n  });\n\n  // Função para formatar a data no formato dd/mm - hh:mm\n  const formatarDataHora = dataHora => {\n    const data = new Date(dataHora);\n    const hora = data.getHours().toString().padStart(2, '0');\n    const minutos = data.getMinutes().toString().padStart(2, '0');\n    return `${hora}:${minutos}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hor\\xE1rios Dispon\\xEDveis para Agendamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), Object.keys(horariosPorDia).map((dia, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: dia\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [...Array(24).keys()].map((hora, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [hora.toString().padStart(2, '0'), \":00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), Object.keys(horariosPorDia).map((dia, index) => {\n              const horariosDoDia = horariosPorDia[dia];\n              const horarioEncontrado = horariosDoDia.find(horario => new Date(horario.data).getHours() === hora);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: horarioEncontrado ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => console.log('Horário selecionado:', horarioEncontrado.hora),\n                  children: formatarDataHora(horarioEncontrado.data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(HorariosPage, \"3qUwd/CofBhDKhcjNFLCT45SEIs=\");\n_c = HorariosPage;\nexport default HorariosPage;\nvar _c;\n$RefreshReg$(_c, \"HorariosPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HorariosPage","cidadeSelecionada","estadoSelecionado","_s","horariosDisponiveis","setHorariosDisponiveis","carregarHorariosDisponiveis","response","get","params","estado","cidade","console","log","data","error","horariosPorDia","forEach","horario","Date","toLocaleDateString","push","formatarDataHora","dataHora","hora","getHours","toString","padStart","minutos","getMinutes","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","dia","index","Array","horariosDoDia","horarioEncontrado","find","onClick","_c","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/Horarios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HorariosPage = ({ cidadeSelecionada, estadoSelecionado }) => {\r\n\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const carregarHorariosDisponiveis = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/horarios', {\r\n          params: {\r\n            estado: estadoSelecionado,\r\n            cidade: cidadeSelecionada,\r\n          },\r\n        });\r\n        console.log('Horários disponíveis:', response.data);\r\n        setHorariosDisponiveis(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar horários disponíveis:', error);\r\n      }\r\n    };\r\n\r\n    if (cidadeSelecionada && estadoSelecionado) {\r\n      carregarHorariosDisponiveis();\r\n    } else {\r\n      setHorariosDisponiveis([]);\r\n    }\r\n  }, [cidadeSelecionada, estadoSelecionado]);\r\n\r\n  // Agrupa os horários disponíveis por dia\r\n  const horariosPorDia = {};\r\n  horariosDisponiveis.forEach((horario) => {\r\n    const data = new Date(horario.data).toLocaleDateString('pt-BR');\r\n    if (!horariosPorDia[data]) {\r\n      horariosPorDia[data] = [];\r\n    }\r\n    horariosPorDia[data].push(horario);\r\n  });\r\n\r\n  // Função para formatar a data no formato dd/mm - hh:mm\r\n  const formatarDataHora = (dataHora) => {\r\n    const data = new Date(dataHora);\r\n    const hora = data.getHours().toString().padStart(2, '0');\r\n    const minutos = data.getMinutes().toString().padStart(2, '0');\r\n    return `${hora}:${minutos}`;\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>Horários Disponíveis para Agendamento</h2>\r\n      <div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Data</th>\r\n              {Object.keys(horariosPorDia).map((dia, index) => (\r\n                <th key={index}>{dia}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {[...Array(24).keys()].map((hora, index) => (\r\n              <tr key={index}>\r\n                <td>{hora.toString().padStart(2, '0')}:00</td>\r\n                {Object.keys(horariosPorDia).map((dia, index) => {\r\n                  const horariosDoDia = horariosPorDia[dia];\r\n                  const horarioEncontrado = horariosDoDia.find(\r\n                    (horario) => new Date(horario.data).getHours() === hora\r\n                  );\r\n                  return (\r\n                    <td key={index}>\r\n                      {horarioEncontrado ? (\r\n                        <button onClick={() => console.log('Horário selecionado:', horarioEncontrado.hora)}>\r\n                          {formatarDataHora(horarioEncontrado.data)}\r\n                        </button>\r\n                      ) : (\r\n                        <span>-</span>\r\n                      )}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorariosPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}