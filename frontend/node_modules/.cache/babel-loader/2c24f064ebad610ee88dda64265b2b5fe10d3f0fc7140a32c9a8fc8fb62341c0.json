{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\Home.js\",\n  _s = $RefreshSig$();\n// src/screens/Home.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport debounce from 'lodash.debounce';\nimport homeStyles from '../styles/home.css';\nimport Horarios from './Horarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [estados, setEstados] = useState([]);\n  const [estadoSelecionado, setEstadoSelecionado] = useState('');\n  const [cidadeDigitada, setCidadeDigitada] = useState('');\n  const [cidadeSelecionada, setCidadeSelecionada] = useState('');\n  const [distritosEncontrados, setDistritosEncontrados] = useState([]);\n  const [mostrarHorario, setMostrarHorario] = useState(false);\n  useEffect(() => {\n    const carregarEstados = async () => {\n      try {\n        const response = await axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados');\n        const estadosData = response.data.map(estado => estado.sigla);\n        setEstados(estadosData);\n      } catch (error) {\n        console.error('Erro ao carregar estados:', error);\n      }\n    };\n    carregarEstados();\n  }, []);\n  const buscarDistritos = async () => {\n    try {\n      if (estadoSelecionado.trim() !== '' && cidadeDigitada.trim() !== '') {\n        const response = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estadoSelecionado}/distritos`);\n        const distritos = response.data.filter(distrito => distrito.nome.toLowerCase().includes(cidadeDigitada.toLowerCase())).map(distrito => distrito.nome);\n        setDistritosEncontrados(distritos);\n      } else {\n        setDistritosEncontrados([]);\n      }\n    } catch (error) {\n      console.error('Erro ao buscar distritos:', error);\n    }\n  };\n  const buscarDistritosDebounced = debounce(buscarDistritos, 300);\n  useEffect(() => {\n    buscarDistritosDebounced();\n  }, [estadoSelecionado, cidadeDigitada]);\n  const selecionarCidade = cidade => {\n    setCidadeDigitada(cidade);\n    setCidadeSelecionada(cidade);\n    setDistritosEncontrados([]);\n  };\n  const handlePesquisarClick = () => {\n    setMostrarHorario(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: homeStyles.body,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.searchForm,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: homeStyles.select,\n        value: estadoSelecionado,\n        onChange: e => setEstadoSelecionado(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione o Estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), estados.map((estado, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: estado,\n          children: estado\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: homeStyles.input,\n        placeholder: \"Nome da Cidade\",\n        value: cidadeDigitada,\n        onChange: e => setCidadeDigitada(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: distritosEncontrados.map((distrito, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => selecionarCidade(distrito),\n          children: distrito\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), cidadeSelecionada && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: homeStyles.button,\n        onClick: handlePesquisarClick,\n        children: \"Pesquisar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), mostrarHorario && /*#__PURE__*/_jsxDEV(Horarios, {\n      cidadeSelecionada: cidadeSelecionada\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"lsUTsAX/czJWFKgJ2AYmQ5MSfyg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","debounce","homeStyles","Horarios","jsxDEV","_jsxDEV","Home","_s","estados","setEstados","estadoSelecionado","setEstadoSelecionado","cidadeDigitada","setCidadeDigitada","cidadeSelecionada","setCidadeSelecionada","distritosEncontrados","setDistritosEncontrados","mostrarHorario","setMostrarHorario","carregarEstados","response","get","estadosData","data","map","estado","sigla","error","console","buscarDistritos","trim","distritos","filter","distrito","nome","toLowerCase","includes","buscarDistritosDebounced","selecionarCidade","cidade","handlePesquisarClick","className","body","children","searchForm","select","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","index","type","input","placeholder","onClick","button","_c","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/Home.js"],"sourcesContent":["// src/screens/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport debounce from 'lodash.debounce';\r\nimport homeStyles from '../styles/home.css';\r\nimport Horarios from './Horarios';\r\n\r\nconst Home = () => {\r\n  const [estados, setEstados] = useState([]);\r\n  const [estadoSelecionado, setEstadoSelecionado] = useState('');\r\n  const [cidadeDigitada, setCidadeDigitada] = useState('');\r\n  const [cidadeSelecionada, setCidadeSelecionada] = useState('');\r\n  const [distritosEncontrados, setDistritosEncontrados] = useState([]);\r\n  const [mostrarHorario, setMostrarHorario] = useState(false);\r\n\r\n  useEffect(() => {\r\n    \r\n    const carregarEstados = async () => {\r\n      try {\r\n        const response = await axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados');\r\n        const estadosData = response.data.map((estado) => estado.sigla);\r\n        setEstados(estadosData);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar estados:', error);\r\n      }\r\n    };\r\n\r\n    carregarEstados();\r\n  }, []);\r\n\r\n  const buscarDistritos = async () => {\r\n    try {\r\n      if (estadoSelecionado.trim() !== '' && cidadeDigitada.trim() !== '') {\r\n        const response = await axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estadoSelecionado}/distritos`);\r\n\r\n        const distritos = response.data\r\n          .filter((distrito) => distrito.nome.toLowerCase().includes(cidadeDigitada.toLowerCase()))\r\n          .map((distrito) => distrito.nome);\r\n\r\n        setDistritosEncontrados(distritos);\r\n      } else {\r\n        setDistritosEncontrados([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao buscar distritos:', error);\r\n    }\r\n  };\r\n\r\n  const buscarDistritosDebounced = debounce(buscarDistritos, 300);\r\n\r\n  useEffect(() => {\r\n    buscarDistritosDebounced();\r\n  }, [estadoSelecionado, cidadeDigitada]);\r\n\r\n  const selecionarCidade = (cidade) => {\r\n    setCidadeDigitada(cidade);\r\n    setCidadeSelecionada(cidade);\r\n    setDistritosEncontrados([]);\r\n  };\r\n\r\n  const handlePesquisarClick = () => {\r\n    setMostrarHorario(true);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={homeStyles.body}>\r\n      {/* ... (restante do c√≥digo) */}\r\n      <div className={homeStyles.searchForm}>\r\n        {/* Dropdown para selecionar o estado */}\r\n        <select\r\n          className={homeStyles.select}\r\n          value={estadoSelecionado}\r\n          onChange={(e) => setEstadoSelecionado(e.target.value)}\r\n        >\r\n          <option value=\"\">Selecione o Estado</option>\r\n          {estados.map((estado, index) => (\r\n            <option key={index} value={estado}>\r\n              {estado}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {/* Input para a cidade */}\r\n        <input\r\n          type=\"text\"\r\n          className={homeStyles.input}\r\n          placeholder=\"Nome da Cidade\"\r\n          value={cidadeDigitada}\r\n          onChange={(e) => setCidadeDigitada(e.target.value)}\r\n        />\r\n        {/* Lista de distritos */}\r\n        <ul>\r\n          {distritosEncontrados.map((distrito, index) => (\r\n            <li key={index} onClick={() => selecionarCidade(distrito)}>\r\n              {distrito}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        {cidadeSelecionada && (\r\n          <button className={homeStyles.button} onClick={handlePesquisarClick}>\r\n            Pesquisar\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {mostrarHorario && (\r\n        <Horarios\r\n          cidadeSelecionada={cidadeSelecionada}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}