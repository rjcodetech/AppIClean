{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\HorariosPage.js\",\n  _s = $RefreshSig$();\n// HorariosPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HorariosPage = ({\n  cidadeSelecionada,\n  estadoSelecionado\n}) => {\n  _s();\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\n  const [formularioAberto, setFormularioAberto] = useState(false); // Estado para controlar a exibição do formulário\n\n  useEffect(() => {\n    const carregarHorariosDisponiveis = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/horarios', {\n          params: {\n            estado: estadoSelecionado,\n            cidade: cidadeSelecionada\n          }\n        });\n        console.log('Horários disponíveis:', response.data);\n        setHorariosDisponiveis(response.data);\n      } catch (error) {\n        console.error('Erro ao carregar horários disponíveis:', error);\n      }\n    };\n    if (cidadeSelecionada && estadoSelecionado) {\n      carregarHorariosDisponiveis();\n    } else {\n      setHorariosDisponiveis([]);\n    }\n  }, [cidadeSelecionada, estadoSelecionado]);\n  const formatarDataHora = dataHora => {\n    const data = new Date(dataHora);\n    const dia = data.getDate().toString().padStart(2, '0');\n    const mes = (data.getMonth() + 1).toString().padStart(2, '0');\n    const hora = data.getHours().toString().padStart(2, '0');\n    const minutos = data.getMinutes().toString().padStart(2, '0');\n    return `${dia}/${mes} - ${hora}:${minutos}`;\n  };\n  const handleAbrirFormulario = () => {\n    setFormularioAberto(true); // Abrir o formulário quando o botão for clicado\n  };\n  const handleFecharFormulario = () => {\n    setFormularioAberto(false); // Fechar o formulário quando necessário\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hor\\xE1rios Dispon\\xEDveis para Agendamento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mx-0 flex-column flex-md-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 result-column p-2\",\n          \"data-test-id\": \"result-items-details\",\n          \"data-id\": \"result-info\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Hora\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: horariosDisponiveis.map((horario, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatarDataHora(horario.data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formularioAberto ?\n                  /*#__PURE__*/\n                  // Verificar se o formulário deve ser exibido\n                  _jsxDEV(FormularioCadastro, {\n                    onClose: handleFecharFormulario\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: handleAbrirFormulario,\n                    children: horario.hora\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(HorariosPage, \"JfXqXlK3Ul9vV1fAA19zgScf38I=\");\n_c = HorariosPage;\nexport default HorariosPage;\nvar _c;\n$RefreshReg$(_c, \"HorariosPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","HorariosPage","cidadeSelecionada","estadoSelecionado","_s","horariosDisponiveis","setHorariosDisponiveis","formularioAberto","setFormularioAberto","carregarHorariosDisponiveis","response","get","params","estado","cidade","console","log","data","error","formatarDataHora","dataHora","Date","dia","getDate","toString","padStart","mes","getMonth","hora","getHours","minutos","getMinutes","handleAbrirFormulario","handleFecharFormulario","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","horario","index","FormularioCadastro","onClose","onClick","_c","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/HorariosPage.js"],"sourcesContent":["// HorariosPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst HorariosPage = ({ cidadeSelecionada, estadoSelecionado }) => {\r\n  const [horariosDisponiveis, setHorariosDisponiveis] = useState([]);\r\n  const [formularioAberto, setFormularioAberto] = useState(false); // Estado para controlar a exibição do formulário\r\n\r\n  useEffect(() => {\r\n    const carregarHorariosDisponiveis = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:3001/horarios', {\r\n          params: {\r\n            estado: estadoSelecionado,\r\n            cidade: cidadeSelecionada,\r\n          },\r\n        });\r\n        console.log('Horários disponíveis:', response.data);\r\n        setHorariosDisponiveis(response.data);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar horários disponíveis:', error);\r\n      }\r\n    };\r\n\r\n    if (cidadeSelecionada && estadoSelecionado) {\r\n      carregarHorariosDisponiveis();\r\n    } else {\r\n      setHorariosDisponiveis([]);\r\n    }\r\n  }, [cidadeSelecionada, estadoSelecionado]);\r\n\r\n  const formatarDataHora = (dataHora) => {\r\n    const data = new Date(dataHora);\r\n    const dia = data.getDate().toString().padStart(2, '0');\r\n    const mes = (data.getMonth() + 1).toString().padStart(2, '0');\r\n    const hora = data.getHours().toString().padStart(2, '0');\r\n    const minutos = data.getMinutes().toString().padStart(2, '0');\r\n    return `${dia}/${mes} - ${hora}:${minutos}`;\r\n  };\r\n\r\n  const handleAbrirFormulario = () => {\r\n    setFormularioAberto(true); // Abrir o formulário quando o botão for clicado\r\n  };\r\n\r\n  const handleFecharFormulario = () => {\r\n    setFormularioAberto(false); // Fechar o formulário quando necessário\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Horários Disponíveis para Agendamento</h2>\r\n      <div className=\"card-body p-0\">\r\n        <div className=\"row mx-0 flex-column flex-md-row\">\r\n          <div className=\"col-lg-6 result-column p-2\" data-test-id=\"result-items-details\" data-id=\"result-info\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Data</th>\r\n                  <th>Hora</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {horariosDisponiveis.map((horario, index) => (\r\n                  <tr key={index}>\r\n                    <td>{formatarDataHora(horario.data)}</td>\r\n                    <td>\r\n                      {formularioAberto ? ( // Verificar se o formulário deve ser exibido\r\n                        <FormularioCadastro onClose={handleFecharFormulario} />\r\n                      ) : (\r\n                        <button onClick={handleAbrirFormulario}>{horario.hora}</button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HorariosPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}