{"ast":null,"code":"var _jsxFileName = \"C:\\\\appproject\\\\agendamento-app\\\\frontend\\\\src\\\\screens\\\\Agendamento.js\",\n  _s = $RefreshSig$();\n// src/screens/Agendamento.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Agendamento = ({\n  cidadeSelecionada,\n  servicoSelecionado\n}) => {\n  _s();\n  const [datasDisponiveis, setDatasDisponiveis] = useState([]);\n  useEffect(() => {\n    // Lógica para carregar datas disponíveis com base na cidade e serviço selecionados\n    // Substitua este exemplo pela lógica real de busca de datas disponíveis\n    const carregarDatasDisponiveis = async () => {\n      try {\n        // Simulação de chamada à API para buscar datas disponíveis\n        const response = await fetch('URL_DA_API_PARA_DATAS_DISPONIVEIS');\n        const data = await response.json();\n\n        // Exemplo: Suponha que a API retorna um array de datas\n        setDatasDisponiveis(data.dates);\n      } catch (error) {\n        console.error('Erro ao carregar datas disponíveis:', error);\n      }\n    };\n    if (cidadeSelecionada && servicoSelecionado) {\n      carregarDatasDisponiveis();\n    } else {\n      setDatasDisponiveis([]); // Limpar datas se a cidade ou o serviço não estiverem selecionados\n    }\n  }, [cidadeSelecionada, servicoSelecionado]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Servi\\xE7o: \", servicoSelecionado]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Cidade: \", cidadeSelecionada]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Datas Dispon\\xEDveis para Agendamento:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: datasDisponiveis.map((data, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Agendamento, \"5CXpanxL2ZSBG3C6li+Bu/e+fnw=\");\n_c = Agendamento;\nexport default Agendamento;\nvar _c;\n$RefreshReg$(_c, \"Agendamento\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Agendamento","cidadeSelecionada","servicoSelecionado","_s","datasDisponiveis","setDatasDisponiveis","carregarDatasDisponiveis","response","fetch","data","json","dates","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/appproject/agendamento-app/frontend/src/screens/Agendamento.js"],"sourcesContent":["// src/screens/Agendamento.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Agendamento = ({ cidadeSelecionada, servicoSelecionado }) => {\r\n  const [datasDisponiveis, setDatasDisponiveis] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Lógica para carregar datas disponíveis com base na cidade e serviço selecionados\r\n    // Substitua este exemplo pela lógica real de busca de datas disponíveis\r\n    const carregarDatasDisponiveis = async () => {\r\n      try {\r\n        // Simulação de chamada à API para buscar datas disponíveis\r\n        const response = await fetch('URL_DA_API_PARA_DATAS_DISPONIVEIS');\r\n        const data = await response.json();\r\n\r\n        // Exemplo: Suponha que a API retorna um array de datas\r\n        setDatasDisponiveis(data.dates);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar datas disponíveis:', error);\r\n      }\r\n    };\r\n\r\n    if (cidadeSelecionada && servicoSelecionado) {\r\n      carregarDatasDisponiveis();\r\n    } else {\r\n      setDatasDisponiveis([]); // Limpar datas se a cidade ou o serviço não estiverem selecionados\r\n    }\r\n  }, [cidadeSelecionada, servicoSelecionado]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Serviço: {servicoSelecionado}</h2>\r\n      <h2>Cidade: {cidadeSelecionada}</h2>\r\n\r\n      <h3>Datas Disponíveis para Agendamento:</h3>\r\n      <ul>\r\n        {datasDisponiveis.map((data, index) => (\r\n          <li key={index}>{data}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Agendamento;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,iBAAiB;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMS,wBAAwB,GAAG,MAAAA,CAAA,KAAY;MAC3C,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;;QAElC;QACAL,mBAAmB,CAACI,IAAI,CAACE,KAAK,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IAED,IAAIX,iBAAiB,IAAIC,kBAAkB,EAAE;MAC3CI,wBAAwB,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLD,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC,EAAE,CAACJ,iBAAiB,EAAEC,kBAAkB,CAAC,CAAC;EAE3C,oBACEH,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,GAAI,cAAS,EAACZ,kBAAkB;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtCnB,OAAA;MAAAe,QAAA,GAAI,UAAQ,EAACb,iBAAiB;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEpCnB,OAAA;MAAAe,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CnB,OAAA;MAAAe,QAAA,EACGV,gBAAgB,CAACe,GAAG,CAAC,CAACV,IAAI,EAAEW,KAAK,kBAChCrB,OAAA;QAAAe,QAAA,EAAiBL;MAAI,GAAZW,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAvCIH,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}